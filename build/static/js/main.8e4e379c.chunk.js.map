{"version":3,"sources":["components/CityComponent.js","components/WeatherInfoComponent.js","App.js","index.js"],"names":["SearchBox","styled","form","ChooseCityLabel","span","CityComponent","img","props","updateCity","fetchWeather","size","onSubmit","onChange","e","target","value","placeholder","type","Location","Condition","WeatherInfoLabel","WeatherContainer","div","WeatherInfoContainer","InfoContainer","InfoLabel","WeatherInfoComponent","name","WeatherComponent","weather","icon","includes","Math","floor","main","temp","description","sys","country","humidity","Container","AppLabel","App","useState","city","updateWeather","a","preventDefault","Axios","get","response","data","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iTAKMA,EAAYC,IAAOC,KAAV,wiBA4BTC,EAAkBF,IAAOG,KAAV,yGA2BNC,GArBYJ,IAAOK,IAAV,iFAKF,SAACC,GAAW,IACxBC,EAA6BD,EAA7BC,WAAYC,EAAiBF,EAAjBE,aACpB,OACE,qCACE,cAAC,IAAD,CAAaC,KAAM,MACnB,cAACP,EAAD,UAAiB,qBACjB,eAACH,EAAD,CAAWW,SAAUF,EAArB,UACE,uBACEG,SAAU,SAACC,GAAD,OAAOL,EAAWK,EAAEC,OAAOC,QACrCC,YAAY,SAEd,wBAAQC,KAAM,SAAd,SAAwB,cAAC,IAAD,CAAaP,KAAM,eCnD7CQ,EAAWjB,IAAOG,KAAV,2HAMRe,EAAYlB,IAAOG,KAAV,4IAQTgB,EAAmBnB,IAAOG,KAAV,sKAahBiB,GALcpB,IAAOK,IAAV,oFAKQL,IAAOqB,IAAV,wKAShBC,EAAuBtB,IAAOqB,IAAV,mKAQpBE,EAAgBvB,IAAOqB,IAAV,qJAWbG,GAJWxB,IAAOK,IAAV,6DAIIL,IAAOG,KAAV,uLAYTsB,EAAuB,SAACnB,GAAW,IAC9BoB,EAAepB,EAAfoB,KAAMZ,EAASR,EAATQ,MACb,OACI,cAACS,EAAD,UACI,eAACC,EAAD,WACKV,EACD,+BAAOY,UA+BRC,EA1BU,SAACrB,GAAW,IAAD,QACzBsB,EAAWtB,EAAXsB,QACI,OAAGA,QAAH,IAAGA,GAAH,UAAGA,EAASA,QAAQ,GAAGC,YAAvB,OAAG,EAA0BC,SAAS,KAIjD,OACI,qCACI,cAACV,EAAD,UACI,eAACF,EAAD,WACI,yCAAUa,KAAKC,OAAa,OAAPJ,QAAO,IAAPA,GAAA,UAAAA,EAASK,YAAT,eAAeC,MAAO,KAA3C,WADJ,sBAEaN,QAFb,IAEaA,OAFb,EAEaA,EAASA,QAAQ,GAAGO,kBAIrC,cAAClB,EAAD,2BAAcW,QAAd,IAAcA,OAAd,EAAcA,EAASF,KAAvB,oBAAgCE,QAAhC,IAAgCA,GAAhC,UAAgCA,EAASQ,WAAzC,aAAgC,EAAcC,WAE9C,cAAClB,EAAD,UAAkB,aAClB,eAACG,EAAD,WACI,cAAC,IAAD,CAAYb,KAAM,KAClB,cAAC,EAAD,CAAsBiB,KAAM,IAAKZ,MAAK,OAAEc,QAAF,IAAEA,GAAF,UAAEA,EAASK,YAAX,aAAE,EAAeK,kBChGjEC,EAAYvC,IAAOqB,IAAV,mQAaTmB,EAAWxC,IAAOG,KAAV,6GAMMH,IAAOG,KAAV,4IA8BFsC,MAtBf,WAAgB,IAAD,EACcC,qBADd,mBACNC,EADM,KACApC,EADA,OAEoBmC,qBAFpB,mBAENd,EAFM,KAEGgB,EAFH,KAGPpC,EAAY,uCAAG,WAAOI,GAAP,eAAAiC,EAAA,6DACnBjC,EAAEkC,iBADiB,SAEIC,IAAMC,IAAN,4DACgCL,EADhC,4CAFJ,OAEbM,EAFa,OAKnBL,EAAcK,EAASC,MALJ,2CAAH,sDAOlB,OACE,eAACX,EAAD,WACE,cAACC,EAAD,UAAU,YACTG,GAAQf,EACP,cAAC,EAAD,CAAkBA,QAASA,EAASe,KAAMA,IAE1C,cAAC,EAAD,CAAepC,WAAYA,EAAYC,aAAcA,QC5C7D2C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.8e4e379c.chunk.js","sourcesContent":["import styled from \"styled-components\";\nimport React from \"react\";\nimport {WiBarometer} from \"react-icons/wi\";\nimport {WiDayCloudy} from \"react-icons/wi\";\n\nconst SearchBox = styled.form\n  `display: flex;\n  flex-direction: row;\n  justify-content: space-evenly;\n  margin: 40px;\n  border: black solid 1px;\n  border-radius: 2px;\n\n  & input {\n    padding: 10px;\n    font-size: 14px;\n    border: none;\n    outline: none;\n    font-family: Helvetica;\n    font-weight: bold;\n  }\n  & button {\n    background-color: #03a9fc;\n    font-size: 14px;\n    padding: 0 10px;\n    color: white;\n    border: none;\n    outline: none;\n    cursor: crosshair;\n    font-family: Helvetica;\n    font-weight: bold;\n  }\n`;\nconst ChooseCityLabel = styled.span\n `color: black;\n  margin: 10px auto;\n  font-size: 18px;\n  font-weight: bold;\n`;\nconst WelcomeWeatherLogo = styled.img\n  `width: 140px;\n  height: 140px;\n  margin: 40px auto;\n`;\nconst CityComponent = (props) => {\n  const { updateCity, fetchWeather } = props;\n  return (\n    <>\n      <WiDayCloudy size={160}/>\n      <ChooseCityLabel>Search your city</ChooseCityLabel>\n      <SearchBox onSubmit={fetchWeather}>\n        <input\n          onChange={(e) => updateCity(e.target.value)}\n          placeholder=\"City\"\n        />\n        <button type={\"submit\"}><WiBarometer size={30}/></button>\n      </SearchBox>\n    </>\n  );\n};\nexport default CityComponent;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport {WiHumidity} from \"react-icons/wi\";\n\nconst Location = styled.span`\n  margin: 15px auto;\n  text-transform: capitalize;\n  font-size: 28px;\n  font-weight: bold;\n`;\nconst Condition = styled.span`\n  margin: 20px auto;\n  text-transform: capitalize;\n  font-size: 14px;\n  & span {\n    font-size: 28px;\n  }\n`;\nconst WeatherInfoLabel = styled.span`\n  margin: 20px 25px 10px;\n  text-transform: capitalize;\n  text-align: center;\n  width: 90%;\n  font-weight: bold;\n  font-size: 19px;\n`;\nconst WeatherIcon = styled.img`\n  width: 100px;\n  height: 100px;\n  margin: 5px auto;\n`;\nconst WeatherContainer = styled.div`\n  display: flex;\n  width: 100%;\n  margin: 30px auto;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst WeatherInfoContainer = styled.div`\n  display: flex;\n  width: 30%;\n  flex-direction: row;\n  justify-content: space-evenly;\n  align-items: center;\n  flex-wrap: wrap;\n`;\nconst InfoContainer = styled.div`\n  display: flex;\n  margin: 5px 10px;\n  flex-direction: row;\n  justify-content: space-evenly;\n  align-items: center;\n`;\nconst InfoIcon = styled.img`\n  width: 36px;\n  height: 36px;\n`;\nconst InfoLabel = styled.span`\n  display: flex;\n  flex-direction: column;\n  font-size: 14px;\n  margin: 15px;\n  & span {\n    font-size: 12px;\n    text-transform: capitalize;\n  }\n`;\n\n\nconst WeatherInfoComponent = (props) => {\n    const {name, value} = props;\n    return (\n        <InfoContainer>\n            <InfoLabel>\n                {value}\n                <span>{name}</span>\n            </InfoLabel>\n        </InfoContainer>\n    );\n};\nconst WeatherComponent = (props) => {\n    const {weather} = props;\n    const isDay = weather?.weather[0].icon?.includes('d')\n    const getTime = (timeStamp) => {\n        return `${new Date(timeStamp * 1000).getHours()} : ${new Date(timeStamp * 1000).getMinutes()}`\n    }\n    return (\n        <>\n            <WeatherContainer>\n                <Condition>\n                    <span>{`${Math.floor(weather?.main?.temp - 273)}Â°C`}</span>   \n                    {`  |  ${weather?.weather[0].description}`}\n                </Condition>\n            \n            </WeatherContainer>\n            <Location>{`${weather?.name}, ${weather?.sys?.country}`}</Location>\n\n            <WeatherInfoLabel>humidity</WeatherInfoLabel>\n            <WeatherInfoContainer>\n                <WiHumidity size={70}/>\n                <WeatherInfoComponent name={\"%\"} value={weather?.main?.humidity}/>\n            </WeatherInfoContainer>\n            \n        </>\n    );\n}; \nexport default WeatherComponent;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Axios from \"axios\";\nimport CityComponent from \"./components/CityComponent\";\nimport WeatherComponent from \"./components/WeatherInfoComponent\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 500px;\n  padding: 20px 10px;\n  margin: auto;\n  border-radius: 4px;\n  box-shadow: 0 3px 6px 0 #555;\n  background: white;\n  font-family: Helvetica;\n`;\n\nconst AppLabel = styled.span`\n  color: black;\n  margin: 20px auto;\n  font-size: 18px;\n  font-weight: bold;\n`;\nconst CloseButton = styled.span`\n  padding: 2px 3px;\n  background-color: black;\n  border-radius: 50%;\n  color: white;\n  position: absolute;\n`;\n\nfunction App() {\n  const [city, updateCity] = useState();\n  const [weather, updateWeather] = useState();\n  const fetchWeather = async (e) => {\n    e.preventDefault();\n    const response = await Axios.get(\n      `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=fe4feefa8543e06d4f3c66d92c61b69c`,\n    );\n    updateWeather(response.data);\n  };\n  return (\n    <Container>\n      <AppLabel>Weather</AppLabel>\n      {city && weather ? (\n        <WeatherComponent weather={weather} city={city} />\n      ) : (\n        <CityComponent updateCity={updateCity} fetchWeather={fetchWeather} />\n      )}\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}