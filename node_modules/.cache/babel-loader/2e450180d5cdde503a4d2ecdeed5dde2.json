{"ast":null,"code":"import _regeneratorRuntime from\"/Volumes/Harish/Projects/React-Weather/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Volumes/Harish/Projects/React-Weather/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Volumes/Harish/Projects/React-Weather/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/Volumes/Harish/Projects/React-Weather/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3;import React,{useState}from\"react\";import styled from\"styled-components\";import Axios from\"axios\";import CityComponent from\"./components/CityComponent\";import WeatherComponent from\"./components/WeatherInfoComponent\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Container=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  width: 500px;\\n  padding: 20px 10px;\\n  margin: auto;\\n  border-radius: 4px;\\n  box-shadow: 0 3px 6px 0 #555;\\n  background: white;\\n  font-family: Helvetica;\\n\"])));var AppLabel=styled.span(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  color: black;\\n  margin: 20px auto;\\n  font-size: 18px;\\n  font-weight: bold;\\n\"])));var CloseButton=styled.span(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  padding: 2px 3px;\\n  background-color: black;\\n  border-radius: 50%;\\n  color: white;\\n  position: absolute;\\n\"])));function App(){var _useState=useState(),_useState2=_slicedToArray(_useState,2),city=_useState2[0],updateCity=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),weather=_useState4[0],updateWeather=_useState4[1];var fetchWeather=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:e.preventDefault();_context.next=3;return Axios.get(\"https://api.openweathermap.org/data/2.5/weather?q=\".concat(city,\"&appid=fe4feefa8543e06d4f3c66d92c61b69c\"));case 3:response=_context.sent;updateWeather(response.data);case 5:case\"end\":return _context.stop();}}},_callee);}));return function fetchWeather(_x){return _ref.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(AppLabel,{children:\"Weather\"}),city&&weather?/*#__PURE__*/_jsx(WeatherComponent,{weather:weather,city:city}):/*#__PURE__*/_jsx(CityComponent,{updateCity:updateCity,fetchWeather:fetchWeather})]});}export default App;","map":{"version":3,"sources":["/Volumes/Harish/Projects/React-Weather/src/App.js"],"names":["React","useState","styled","Axios","CityComponent","WeatherComponent","Container","div","AppLabel","span","CloseButton","App","city","updateCity","weather","updateWeather","fetchWeather","e","preventDefault","get","response","data"],"mappings":"urBAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,aAAP,KAA0B,4BAA1B,CACA,MAAOC,CAAAA,gBAAP,KAA6B,mCAA7B,C,wFAEA,GAAMC,CAAAA,SAAS,CAAGJ,MAAM,CAACK,GAAV,0SAAf,CAaA,GAAMC,CAAAA,QAAQ,CAAGN,MAAM,CAACO,IAAV,sJAAd,CAMA,GAAMC,CAAAA,WAAW,CAAGR,MAAM,CAACO,IAAV,qLAAjB,CAQA,QAASE,CAAAA,GAAT,EAAe,eACcV,QAAQ,EADtB,wCACNW,IADM,eACAC,UADA,8BAEoBZ,QAAQ,EAF5B,yCAENa,OAFM,eAEGC,aAFH,eAGb,GAAMC,CAAAA,YAAY,0FAAG,iBAAOC,CAAP,+HACnBA,CAAC,CAACC,cAAF,GADmB,sBAEIf,CAAAA,KAAK,CAACgB,GAAN,6DACgCP,IADhC,4CAFJ,QAEbQ,QAFa,eAKnBL,aAAa,CAACK,QAAQ,CAACC,IAAV,CAAb,CALmB,sDAAH,kBAAZL,CAAAA,YAAY,4CAAlB,CAOA,mBACE,MAAC,SAAD,yBACE,KAAC,QAAD,WAAU,SAAV,EADF,CAEGJ,IAAI,EAAIE,OAAR,cACC,KAAC,gBAAD,EAAkB,OAAO,CAAEA,OAA3B,CAAoC,IAAI,CAAEF,IAA1C,EADD,cAGC,KAAC,aAAD,EAAe,UAAU,CAAEC,UAA3B,CAAuC,YAAY,CAAEG,YAArD,EALJ,GADF,CAUD,CAED,cAAeL,CAAAA,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Axios from \"axios\";\nimport CityComponent from \"./components/CityComponent\";\nimport WeatherComponent from \"./components/WeatherInfoComponent\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 500px;\n  padding: 20px 10px;\n  margin: auto;\n  border-radius: 4px;\n  box-shadow: 0 3px 6px 0 #555;\n  background: white;\n  font-family: Helvetica;\n`;\n\nconst AppLabel = styled.span`\n  color: black;\n  margin: 20px auto;\n  font-size: 18px;\n  font-weight: bold;\n`;\nconst CloseButton = styled.span`\n  padding: 2px 3px;\n  background-color: black;\n  border-radius: 50%;\n  color: white;\n  position: absolute;\n`;\n\nfunction App() {\n  const [city, updateCity] = useState();\n  const [weather, updateWeather] = useState();\n  const fetchWeather = async (e) => {\n    e.preventDefault();\n    const response = await Axios.get(\n      `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=fe4feefa8543e06d4f3c66d92c61b69c`,\n    );\n    updateWeather(response.data);\n  };\n  return (\n    <Container>\n      <AppLabel>Weather</AppLabel>\n      {city && weather ? (\n        <WeatherComponent weather={weather} city={city} />\n      ) : (\n        <CityComponent updateCity={updateCity} fetchWeather={fetchWeather} />\n      )}\n    </Container>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}