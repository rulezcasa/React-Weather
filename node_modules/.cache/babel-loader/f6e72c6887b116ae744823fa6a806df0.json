{"ast":null,"code":"var _jsxFileName = \"/Volumes/Harish/Projects/React-Weather/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Axios from \"axios\";\nimport CityComponent from \"./components/CityComponent\";\nimport WeatherComponent from \"./components/WeatherInfoComponent\";\nimport { Route, Navigate, Routes, Router } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 500px;\n  padding: 20px 10px;\n  margin: auto;\n  border-radius: 4px;\n  box-shadow: 0 3px 6px 0 #555;\n  background: white;\n  font-family: Helvetica;\n`;\n_c = Container;\nconst AppLabel = styled.span`\n  color: black;\n  margin: 20px auto;\n  font-size: 18px;\n  font-weight: bold;\n`;\n_c2 = AppLabel;\nconst CloseButton = styled.span`\n  padding: 2px 3px;\n  background-color: black;\n  border-radius: 50%;\n  color: white;\n  position: absolute;\n`;\n\nfunction App() {\n  _s();\n\n  const [city, updateCity] = useState();\n  const [weather, updateWeather] = useState();\n\n  const fetchWeather = async e => {\n    e.preventDefault();\n    const response = await Axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=fe4feefa8543e06d4f3c66d92c61b69c`);\n    updateWeather(response.data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \"CityComponent\",\n        element: /*#__PURE__*/_jsxDEV(CityComponent, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 46\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppLabel, {\n      children: \"Weather\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), city && weather ? /*#__PURE__*/_jsxDEV(WeatherComponent, {\n      weather: weather,\n      city: city\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(CityComponent, {\n      updateCity: updateCity,\n      fetchWeather: fetchWeather\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"YFGz9B5E5Cixc4dM1AocLvEYOTM=\");\n\n_c3 = App;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"AppLabel\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"sources":["/Volumes/Harish/Projects/React-Weather/src/App.js"],"names":["React","useState","styled","Axios","CityComponent","WeatherComponent","Route","Navigate","Routes","Router","Container","div","AppLabel","span","CloseButton","App","city","updateCity","weather","updateWeather","fetchWeather","e","preventDefault","response","get","data"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,OAAOC,gBAAP,MAA6B,mCAA7B;AACA,SAAQC,KAAR,EAAcC,QAAd,EAAuBC,MAAvB,EAA+BC,MAA/B,QAA4C,kBAA5C;;AAGA,MAAMC,SAAS,GAAGR,MAAM,CAACS,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXA;KAAMD,S;AAaN,MAAME,QAAQ,GAAGV,MAAM,CAACW,IAAK;AAC7B;AACA;AACA;AACA;AACA,CALA;MAAMD,Q;AAMN,MAAME,WAAW,GAAGZ,MAAM,CAACW,IAAK;AAChC;AACA;AACA;AACA;AACA;AACA,CANA;;AAQA,SAASE,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,UAAP,IAAqBhB,QAAQ,EAAnC;AACA,QAAM,CAACiB,OAAD,EAAUC,aAAV,IAA2BlB,QAAQ,EAAzC;;AACA,QAAMmB,YAAY,GAAG,MAAOC,CAAP,IAAa;AAChCA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,QAAQ,GAAG,MAAMpB,KAAK,CAACqB,GAAN,CACpB,qDAAoDR,IAAK,yCADrC,CAAvB;AAGAG,IAAAA,aAAa,CAACI,QAAQ,CAACE,IAAV,CAAb;AACD,GAND;;AAOA,sBACE,QAAC,SAAD;AAAA,4BACE,QAAC,MAAD;AAAA,6BACE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,eAAZ;AAA4B,QAAA,OAAO,eAAE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAArC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,QAAD;AAAA,gBAAU;AAAV;AAAA;AAAA;AAAA;AAAA,YAJF,EAKGT,IAAI,IAAIE,OAAR,gBACC,QAAC,gBAAD;AAAkB,MAAA,OAAO,EAAEA,OAA3B;AAAoC,MAAA,IAAI,EAAEF;AAA1C;AAAA;AAAA;AAAA;AAAA,YADD,gBAGC,QAAC,aAAD;AAAe,MAAA,UAAU,EAAEC,UAA3B;AAAuC,MAAA,YAAY,EAAEG;AAArD;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GAvBQL,G;;MAAAA,G;AAyBT,eAAeA,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Axios from \"axios\";\nimport CityComponent from \"./components/CityComponent\";\nimport WeatherComponent from \"./components/WeatherInfoComponent\";\nimport {Route,Navigate,Routes, Router} from \"react-router-dom\";\n\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 500px;\n  padding: 20px 10px;\n  margin: auto;\n  border-radius: 4px;\n  box-shadow: 0 3px 6px 0 #555;\n  background: white;\n  font-family: Helvetica;\n`;\n\nconst AppLabel = styled.span`\n  color: black;\n  margin: 20px auto;\n  font-size: 18px;\n  font-weight: bold;\n`;\nconst CloseButton = styled.span`\n  padding: 2px 3px;\n  background-color: black;\n  border-radius: 50%;\n  color: white;\n  position: absolute;\n`;\n\nfunction App() {\n  const [city, updateCity] = useState();\n  const [weather, updateWeather] = useState();\n  const fetchWeather = async (e) => {\n    e.preventDefault();\n    const response = await Axios.get(\n      `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=fe4feefa8543e06d4f3c66d92c61b69c`,\n    );\n    updateWeather(response.data);\n  };\n  return (\n    <Container>\n      <Router>\n        <Route path=\"CityComponent\" element={<CityComponent/>}/>\n      </Router>\n      <AppLabel>Weather</AppLabel>\n      {city && weather ? (\n        <WeatherComponent weather={weather} city={city} />\n      ) : (\n        <CityComponent updateCity={updateCity} fetchWeather={fetchWeather} />\n      )}\n    </Container>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}